plugins {
    id 'java'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'net.darkhax.curseforgegradle' version '1.0.11'
}

version = "1.20.1-forge-${version}"
group = 'witixin.wanderingfighters' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'wanderingfighters'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
   mappings channel: 'official', version: '1.20.1'
   //accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'wanderingfighters'

            mods {
                wanderingfighters {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('runServer')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args "--nogui", 'true', "--singleplayer", 'yes'

            property 'forge.enabledGameTestNamespaces', 'wanderingfighters'

            mods {
                wanderingfighters {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'wanderingfighters'

            mods {
                wanderingfighters {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'wanderingfighters', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                wanderingfighters {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.3'
    annotationProcessor 'org.spongepowered:mixin:0.8.5-SNAPSHOT:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "wanderingfighters",
                "Specification-Vendor"    : "wanderingfighterssareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "wanderingfighterssareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


mixin {
    add sourceSets.main, "wanderingfighters.refmap.json"
    config "wanderingfighters.mixins.json"
}

jar.finalizedBy('reobfJar')

java {
    withSourcesJar()
    withJavadocJar()
}

task publishToCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    apiToken = project.findProperty("curseforge.upload.api.token") ?: "invalid/no CurseForge API token found!"

    def mainFile = upload("695587", file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))

    mainFile.displayName = "${archivesBaseName}-${version}"
    mainFile.releaseType = "release"
    mainFile.addModLoader("Forge")
    mainFile.addGameVersion("1.20.1")
    mainFile.addJavaVersion("Java 17")

    mainFile.changelog = "Add a setting in the modifier to allow all wandering traders to drop their loot."
}

tasks.publishToCurseForge.dependsOn(tasks.assemble)

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
